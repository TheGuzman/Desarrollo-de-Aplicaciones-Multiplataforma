AlgoritmoEjercicio2

PROCEDIMIENTO lecturaDeDatos(VAR listaAlumnos: array, VAR filas: entero, columnas: entero)
INICIO
# Este procedimiento lee una secuencia de de alumnos
# y los guarda en una matriz que se pasa como parámetro.
# filas es el números de filas válidos de la matriz.
# por cada alumno se leerán los cinco datos (nombre, apellidos, edad, nota final)

    # Parte declarativa
    correcto: buleano

    # Cuerpo algoritmo
    mostrarPorPantalla("¿Cuántos alimnos desea entrar? (5 max.) ")

    REPETIR
    # validar número de datos

        leer filas
        correcto = filas >= 0 o filas <= maxAlumnos
        SI filas < 0 o filas > maxAlumnos ENOTNCES
            mostrarPorPantalla("Por favor introduzca un número válido de alumnos [0, 5]")
        FINSI
    HASTA (correcto)

    DESDE index = 0 HASTA filas - 1 HACER
        mostrarPorPantalla("Inroduzca los datos del alumno #", index + 1, ": ")
            leer listaAlumnos[index][0] # nombre
            leer listaAlumnos[index][1] # apellidos
            leer listaAlumnos[index][2] # edad
            leer listaAlumnos[index][3] # nota final
    FINDESDE
FIN

PROCEDIMIENTO imprimirDatos(VAR listaAlumnos: array, filas: entero)
INICIO
# Este procedimiento muestra por pantalla la información de
# una lista de alumnos. filas indica el número de filas válidas
# de la matriz

    # Parte declarativa


    # Cuerpo algoritmo
        DESDE index = 0 HASTA filas - 1 HACER
            mostrarPorPantalla(listaNumeros[index][0], " ",
                                listaNumeros[index][1], " ",
                                listaNumeros[index][2], " ",
                                listaNumeros[index][3], " ",)
        FINDESDE
    
FIN

PROCEDIMIENTO buscarAlumno(listaAlumnos: array, filas: entero, nombre: cadena, apellidos: cadena)
INICIO
# Este procedimiento busca un alumno en listaAlumnos y muestra sus datos
# por pantalla si lo encuentra, informa de que no existe en caso contrario

    # Parte declarativa
    indice: entero # indice del alumno que se busca
    posicion: entero # indice para iterar sobre las filas de la matriz


    # Cuerpo algoritmo
    indice = -1
    posicion = 0
    REPETIR
        SI listaAlumnos[posicion][0] == nombre y listaAlumnos[posicion][1] == apellidos ENOTNCES
            indice = posicion
        FINSI

        posicion = posicion + 1
    HASTA(posicion < filas y indice <> - 1)
    
    SI indice == -1 ENOTNCES
        mostrarPorPantalla("El alumno no existe :'(")
    SINO
        mostrarPorPantalla(listaAlumnos[posicion][0], " ", listaAlumnos[posicion][1], " ",
                            listaAlumnos[posicion][2], " ", listaAlumnos[posicion][3])
    FINSI
FIN

PROCEDIMIENTO mostraEdadMedia(listaAlumnos: array, filas: entero)
# Este procedimiento muestra por pantalla la edad media de 
# una lista de alumnos guardados en una matriz

    # Parte declarativa
    sumaEdades: decimal

    # Cuerpo algoritmo
    DDESD index = 0 HASTA filas - 1 HACER
        sumaEdades = sumaEdades + listaAlumnos[index][3]
    FINDESDE

    mostrarPorPantalla("La edad media de los alumnos registrados es: ", sumaEdades / filas)    
FIN

PROCEDIMIENTO mostraAlumnoMejorNota(listaAlumnos: array, filas: entero)
INICIO
# Este procedimiento muestra por pantalla el alumno con la mejor nota
# de todos los alumnos registrados

    # Parte declarativa
    maximaNota: decimal
    indiceAlumnoConMaximaNota: entero

    # Cuerpo algoritmo
    maximaNota = listaAlumnos[0][4]
    indiceAlumnoConMaximaNota = 0
    DESDE index = 1 HASTA filas - 1 HACER
        SI listaAlumnos[index][3] > maximaNota ENTONCES
            indiceAlumnoConMaximaNota = index
            maximaNota = listaAlumnos[index][3]
        FINSI
    FINDESDE
    
    mostrarPorPantalla("El alumno con la mejor nota es: ", listaAlumnos[indiceAlumnoConMaximaNota][0], " "
                        listaAlumnos[indiceAlumnoConMaximaNota][1])
FIN

PROCEDIMIENTO mostraAlumnoPeorNota(listaAlumnos: array, filas: entero)
INICIO
# Este procedimiento muestra por pantalla el alumno con la peor nota
# de todos los alumnos registrados

    # Parte declarativa
    minimaNota: decimal
    indiceAlumnoConMinimaNota: entero

    # Cuerpo algoritmo
    minimaNota = listaAlumnos[0][4]
    indiceAlumnoConMinimaNota = 0
    DESDE index = 1 HASTA filas - 1 HACER
        SI listaAlumnos[index][3] < minimaNota ENTONCES
            indiceAlumnoConMinimaNota = index
            minimaNota = listaAlumnos[index][3]
        FINSI
    FINDESDE
    
    mostrarPorPantalla("El alumno con la peor nota es: ", listaAlumnos[indiceAlumnoConMinimaNota][0], " "
                        listaAlumnos[indiceAlumnoConMinimaNota][1])
FIN

PROCEDIMIENTO main(args: cadena)
INICIO
    # Fecha:			20 Octubre 2022
    # Autor:			Hugo Pelayo
    # Descripción:      Este programa

    # Parte declarativa:
    filas: entero
    maxAlumnos := 5
    alumnos[maxAlumnos, 4]

    nombreBuscar: cadena de caracteres
    apellidosBuscar: cadena de caracteres

    # Cuerpo del algoritmo

    REPETIR
        mostrarPorPantalla("Por favor, seleccione una de las opciones [introducir índice]")
        mostrarPorPantalla("1. Leer datos de alumnos.")
        mostrarPorPantalla("2. Imprimir datos de alumnos.")
        mostrarPorPantalla("3. Buscar alumno [nombre y apellidos].")
        mostrarPorPantalla("4. Calcular edad media.")
        mostrarPorPantalla("5. Mostrar alumno con mejor nota.")
        mostrarPorPantalla("6. Mostrar alumno con peor nota.")
        mostrarPorPantalla("7. Salir de la aplicación.")

        leer opcion

        SI opcion == 1 ENTONCES
            lecturaDeDatos(alumnos, filas)
        FINSI

        SI opcion == 2 ENTONCES
            imprimirDatos(alumnos, filas)
        FINSI

        SI opcion == 3 ENTONCES
            mostrarPorPantalla("Por favor introduzca el nombre y apellidos del alumno a buscar: ")
            leer nombreBuscar
            leer apellidosBuscar
            LLAMAR_A buscarAlumno(alumnos, filas, nombreBuscar, apellidosBuscar)
        FINSI

        SI opcion == 4 ENTONCES
            LLAMAR_A mostraEdadMedia(alumnos, filas)
        FINSI

        SI opcion == 5 ENTONCES
            LLAMAR_A mostraAlumnoMejorNota(alumnos, filas)
        FINSI

        SI opcion == 6 ENTONCES
            LLAMAR_A mostraAlumnoPeorNota(alumnos, filas)
        FINSI
    HASTA (opcion == 7)
FIN
